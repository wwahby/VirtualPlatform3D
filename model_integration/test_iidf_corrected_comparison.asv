%clear all
%close all
%% Chip descriptors

% Stack parameters
Ng = 1.6e9;
S = 4;

% Tsv parameters
Atf_max = 0.10; % maximum allowable TSV area, as a fraction of total chip area
gate_pitch = 100e-9;
h_tsv_m = 300e-6;
AR_tsv = 20;

% Rent parameters
p = 0.6; % rent exponent
fo = 4; % avg fanout
alpha = fo/(fo+1); % input terminal fraction
k = 3/alpha; %rent constant


%% Presize the chip and TSVs
Ns = Ng/S;
Lx = round(sqrt(Ns));

% Recalculate these to make sure everything is a nice integer
Ns = Lx^2;
Ng = Ns*S;

% Size the TSVs
h_tsv = ceil(h_tsv_m/gate_pitch);
w_tsv = ceil(h_tsv/AR_tsv);

%% Size the chip so we have a nicely divisible number of unit cells per side
Nsp = floor( (1+Atf_max)*Ns );
Lxp = floor(sqrt(Nsp));
Nsp = Lxp^2;
Tp = ceil(w_tsv/sqrt(Atf_max));

slack = 0.07;
[Lxc Tc Nuc_1d gfrac_L gfrac_T] = find_LT_combination(Lxp,Tp,slack);

Nsc = Lxc^2;
Ngc = Nsc*S;

N_tsvs = Nuc_1d^2;
g_tsv = (Nuc_1d*w_tsv)^2; % number of gates displaced by TSVs
Atf_act = g_tsv/Ngc;

repstr1 = sprintf('Ng_nom: %.4g',Ng);
repstr2 = sprintf('Ng_act: %.4g',Ngc);
repstr3 = sprintf('Atf_act: %.4g',Atf_act);
disp(repstr1)
disp(repstr2)
disp(repstr3)

%% Calculate WLD
iidf_c = calc_Iidf_corrected(alpha,k,p,Lxc,S,h_tsv,Nuc_1d,w_tsv);
iidf_j = calc_Iidf(alpha,k,p,Lx,S,h_tsv);

%AA = calc_Nstart(Lx,S,r);
Mt3dj = Mt_3d_joyner(Lx,S,r);
Mt3dc = Mt_3d_corrected(Lx,S,r,Nuc_1d,w_tsv);
Mt2dj = Mt_2d_joyner(Lx);
Mt2dc = Mt2d_corrected(Lx, Nuc_1d, w_tsv);
Nstart = calc_Nstart(Lx,S,r,g_tsv);
Nnst = calc_Nnst(Lx,S,r,g_tsv);
Nnsb = calc_Nnsb(Lx,S,r,g_tsv);
Nc = calc_Nc(Mt3dc,Lx,S,r,g_tsv);
h = calc_h(Lx, Nuc_1d, w_tsv);
term4 = zeros(1,length(Mt2dj));
term4(1:2*w_tsv+1) = N_tsvs*Mt_2d_joyner(w_tsv);
iexp = calc_Iexp(alpha,k,p,Mt3dc,Lx,S,r,g_tsv);

%% Calculate error
ldiff1 = length(iidf_c) - length(iidf_j);
ldiff2 = length(iidf_j) - length(iidf_c);
iidf_c = [iidf_c zeros(1,ldiff2)];
iidf_j = [iidf_j zeros(1,ldiff1)];

err_raw = abs(iidf_c-iidf_j);
err_norm = err_raw./iidf_j;

%% WLD comparison
figure(1)
clf
loglog(iidf_j);
hold on
loglog(iidf_c,'r--')
title('Iidf')
%% Support functions
figure(2)
clf
plot(Mt3dj,'b')
hold on
plot(Mt3dc,'r:')
title('Mt3d')

figure(3)
clf
plot(Mt2dj,'b')
hold on
plot(Mt2dc,'r:')
title('Mt2d')

figure(4)
clf
plot(Nnst,'b')
hold on
plot(Nnsb,'r--')
title('Nonstarting gates')

%% Error
figure(5)
clf
loglog(err_raw)
title('raw error')

figure(6)
clf
loglog(err_norm)
title('normalized error')